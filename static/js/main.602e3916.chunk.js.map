{"version":3,"sources":["img/blackking.svg","img/blackknight.svg","img/blackpawn.svg","img/blackqueen.svg","img/blackrook.svg","img/blackbishop.svg","img/whitebishop.svg","img/whiteking.svg","img/whiteknight.svg","img/whitepawn.svg","img/whitequeen.svg","img/whiterook.svg","pieces/Pieces.js","helpers/helpers.js","components/Square.js","reduxStore/Store.js","components/Board.js","components/FullScreenBtn.js","components/StatusPanel.js","components/LostPieces.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Base","color","this","possibleMove","selected","EmptySlot","name","Knight","call","src","movement","x","y","Rook","firstMove","Array","fill","reduce","acc","cur","index","push","handleFirstMove","Bishop","Queen","King","Pawn","direction","getEatFromBehindPosition","eatingMoves","getPossibleMoves","board","currentPlayer","piece","checkValidity","arguments","length","undefined","LoM","i","_direction$i","_piece$coord","coord","col","row","isWithinBoard","boardCopy","map","line","Object","toConsumableArray","hyptheticalMove","isEmptySlot","isTeamMate","isEnemy","checkifAllowed","possibleMoves","forbiddenMoves","possibleChess","possibleEat","getPawnEatingMoves","firstMoveWeakness","_piece$coord2","_ref","currentPos","hypotheticPos","nextPlayer","hypotheticBoard","movePiece","j","verifyChessMate","Start","End","playingPiece","assign","getImage","pieceType","concat","blackKing","blackKnight","blackPawn","blackQueen","blackRook","blackBishop","whiteBishop","whiteKing","whiteKnight","whitePawn","whiteQueen","whiteRook","React","memo","number","className","handleClick","SquareColor","react_default","a","createElement","onClick","bind","alt","initialState","white","black","move","undo","store","createStore","state","action","type","_objectSpread","payload","console","log","initialBoard","Board","selectedCoord","StartingCoord","possibleRock","lostPieces","chessMate","prevState","componentDidUpdate","_this","props","setState","dispatch","e","stateCopy","_","cloneDeep","hasSelectedPieceToMove","validMove","target","classList","contains","getBoundingClientRect","top","left","Board_objectSpread","_ref2","getClosest","_piece$coord3","canRockLeft","canRockRight","RockList","getRock","EndingCoord","playedPiece","ateFromBehind","ateSomething","pawnDoubleMove","didRock","slice","startCoord","endCoord","root","document","documentElement","firstChild","toggle","style","setProperty","setTimeout","animatePiece","handleRock","changePawnToQueen","angle","startingAngle","setAngle","window","requestAnimationFrame","rotateBkg","getClassName","_state","_this2","components_Square","key","Component","connect","ownProps","FullScreenBtn","_React$useState","useState","_React$useState2","slicedToArray","fullScreen","setScreenState","getElementById","toggleFullscreen","webkitIsFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","icon","Fragment","StatusPanel_objectSpread","LostPieces","keys","WhiteLostPieces","LostPieces_objectSpread","BlackLostPieces","Boolean","location","hostname","match","ReactDOM","render","components_FullScreenBtn","es","components_Board","components_StatusPanel","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.602e3916.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blackking.55996645.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackknight.9448fe65.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackpawn.1936b4fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackqueen.1e08c1cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackrook.de028d4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/blackbishop.0fbeae9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitebishop.247f2288.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteking.d48cb8c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiteknight.d9e7ee7d.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitepawn.e3ae362d.svg\";","module.exports = __webpack_public_path__ + \"static/media/whitequeen.899af581.svg\";","module.exports = __webpack_public_path__ + \"static/media/whiterook.2775cbc7.svg\";","// Constructors base\nfunction Base ( color ) {\n\tthis.color = color;\n\tthis.possibleMove = false;\n\tthis.selected = false;\n}\n\nexport function EmptySlot () {\n\tthis.name = null;\n\tthis.possibleMove = false;\n\tthis.selected = false;\n}\n\n\nexport function Knight ( color ) {\n\tBase.call( this, color )\n\tthis.name = \"Knight\";\n\tthis.src = \"knight\"\n\tthis.movement = [\n\t\t[ { x: 1, y: 2 } ],\n\t\t[ { x: -1, y: 2 } ],\n\t\t[ { x: 1, y: -2 } ],\n\t\t[ { x: -1, y: -2 } ],\n\t\t[ { x: 2, y: 1 } ],\n\t\t[ { x: -2, y: 1 } ],\n\t\t[ { x: 2, y: -1 } ],\n\t\t[ { x: -2, y: -1 } ]\n\t]\n}\n\nexport function Rook ( color ) {\n\tBase.call( this, color )\n\tthis.name = \"Rook\";\n\tthis.src = \"rook\";\n\tthis.firstMove = true;\n\tthis.movement = function () {\n\t\tlet UP = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: 0, y: - index - 1 } ), acc ), [] )\n\t\tlet DOWN = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: 0, y: index + 1 } ), acc ), [] )\n\t\tlet LEFT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: - index - 1, y: 0 } ), acc ), [] )\n\t\tlet RIGHT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: index + 1, y: 0 } ), acc ), [] )\n\n\t\treturn [ UP, DOWN, LEFT, RIGHT ];\n\t}()\n\tthis.handleFirstMove = function () {\n\t\tthis.firstMove = false;\n\t}\n}\n\nexport function Bishop ( color ) {\n\tBase.call( this, color )\n\tthis.name = \"Bishop\";\n\tthis.src = \"bishop\"\n\tthis.movement = function () {\n\t\tlet UP_LEFT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: - index - 1, y: - index - 1 } ), acc ), [] )\n\t\tlet DOWN_LEFT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: - index - 1, y: index + 1 } ), acc ), [] )\n\t\tlet UP_RIGHT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: index + 1, y: - index - 1 } ), acc ), [] )\n\t\tlet DOWN_RIGHT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: index + 1, y: index + 1 } ), acc ), [] )\n\n\t\treturn [ UP_LEFT, DOWN_LEFT, UP_RIGHT, DOWN_RIGHT ];\n\t}()\n}\n\nexport function Queen ( color ) {\n\tBase.call( this, color )\n\tthis.name = \"Queen\";\n\tthis.src = \"crown\"\n\tthis.movement = function () {\n\t\tlet UP = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: 0, y: - index - 1 } ), acc ), [] )\n\t\tlet DOWN = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: 0, y: index + 1 } ), acc ), [] )\n\t\tlet LEFT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: - index - 1, y: 0 } ), acc ), [] )\n\t\tlet RIGHT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: index + 1, y: 0 } ), acc ), [] )\n\t\tlet UP_LEFT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: - index - 1, y: - index - 1 } ), acc ), [] )\n\t\tlet DOWN_LEFT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: - index - 1, y: index + 1 } ), acc ), [] )\n\t\tlet UP_RIGHT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: index + 1, y: - index - 1 } ), acc ), [] )\n\t\tlet DOWN_RIGHT = Array( 7 ).fill().reduce( ( acc, cur, index ) => ( acc.push( { x: index + 1, y: index + 1 } ), acc ), [] )\n\n\t\treturn [ UP, DOWN, LEFT, RIGHT, UP_LEFT, DOWN_LEFT, UP_RIGHT, DOWN_RIGHT ];\n\t}()\n}\n\nexport function King ( color ) {\n\tBase.call( this, color )\n\tthis.name = \"King\";\n\tthis.src = \"king\"\n\tthis.firstMove = true;\n\tthis.movement = [\n\t\t[ { x: -1, y: -1 } ],\n\t\t[ { x: -1, y: 0 } ],\n\t\t[ { x: -1, y: 1 } ],\n\t\t[ { x: 0, y: 1 } ],\n\t\t[ { x: 1, y: 1 } ],\n\t\t[ { x: 1, y: 0 } ],\n\t\t[ { x: 1, y: -1 } ],\n\t\t[ { x: 0, y: -1 } ]\n\t]\n\tthis.handleFirstMove = function () {\n\t\tthis.firstMove = false;\n\t}\n}\n\nexport function Pawn ( color ) {\n\tBase.call( this, color )\n\tthis.name = \"Pawn\";\n\tthis.src = \"pawn\"\n\tthis.firstMove = true;\n\tthis.direction = ( color === \"white\" ? 1 : -1 )\n\tthis.movement = [ [ { x: 0, y: 1 * this.direction }, { x: 0, y: 2 * this.direction } ] ]\n\n\tthis.getEatFromBehindPosition = function () {\n\t\treturn - this.direction;\n\t}\n\tthis.eatingMoves = [ { x: -1, y: this.direction }, { x: 1, y: this.direction } ]\n\tthis.handleFirstMove = function () {\n\t\tthis.firstMove = false;\n\t\tthis.movement = [ [ { x: 0, y: this.direction } ] ];\n\t}\n}","import { EmptySlot, Queen, Rook } from \"../pieces/Pieces\"\nimport blackKing from \"../img/blackking.svg\";\nimport blackKnight from \"../img/blackknight.svg\";\nimport blackPawn from \"../img/blackpawn.svg\";\nimport blackQueen from \"../img/blackqueen.svg\";\nimport blackRook from \"../img/blackrook.svg\";\nimport blackBishop from \"../img/blackbishop.svg\";\nimport whiteBishop from \"../img/whitebishop.svg\";\nimport whiteKing from \"../img/whiteking.svg\";\nimport whiteKnight from \"../img/whiteknight.svg\";\nimport whitePawn from \"../img/whitepawn.svg\";\nimport whiteQueen from \"../img/whitequeen.svg\";\nimport whiteRook from \"../img/whiterook.svg\";\n\n/*\n *  TABLE OF CONTENT\n * \n *  1. HELPERS FOR PIECE SELECTION\n * \t\t1.1 getPossibleMoves\n * \t\t1.2 getPawnEatingMoves\n * \t\t1.3 checkifAllowed\n * \t\t1.4 getRock\n * \t\t1.5 verifyChessMate\n * \n *  2. HELPERS TO HANDLE MOVE\n * \t\t2.1 handleRock\n * \t\t2.2 movePiece\n * \t\t2.3 changePawnToQueen\n * \t\t2.4 getPossibleMoves\n * \n *  3. DISPLAY HELPERS\n * \t\t3.1 animatePiece\n * \t\t3.2 getImage\n * \t\t3.3 rotateBkg\n */\n\n\n/**********************************\n * 1. HELPERS FOR PIECE SELECTION\n **********************************/\n\n//1.1 getPossibleMoves\nexport function getPossibleMoves ( board, currentPlayer, piece, checkValidity = true ) {\n\n\treturn piece.movement.reduce( ( LoM, direction ) => {\n\t\tlet i = 0;\n\n\t\twhile ( i < direction.length ) {\n\t\t\tconst { x, y } = direction[ i ];\n\t\t\tconst { col, row } = piece.coord;\n\t\t\tconst isWithinBoard = col + x <= 7 && col + x >= 0 && row + y >= 0 && row + y <= 7;\n\t\t\tlet boardCopy = board.map( line => [ ...line ] );\n\n\t\t\tif ( isWithinBoard ) {\n\t\t\t\tconst hyptheticalMove = board[ row + y ][ col + x ];\n\t\t\t\tconst isEmptySlot = !hyptheticalMove.name;\n\t\t\t\tconst isTeamMate = hyptheticalMove.color === currentPlayer\n\t\t\t\tconst isEnemy = hyptheticalMove.color && hyptheticalMove.color !== currentPlayer;\n\n\t\t\t\tif ( isEmptySlot ) {//avoids infinite CB // if TRUE (default) : the validity of the possibleMove will be checked// if set FALSE, the possible move validity will not be checked\n\t\t\t\t\tif ( checkValidity ) {\n\t\t\t\t\t\tconst isAllowed = checkifAllowed( boardCopy, currentPlayer, piece.coord, { col: col + x, row: row + y } );\n\t\t\t\t\t\tisAllowed\n\t\t\t\t\t\t\t? LoM.possibleMoves.push( { col: col + x, row: row + y } )\n\t\t\t\t\t\t\t: LoM.forbiddenMoves.push( { col: col + x, row: row + y } )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( !isEmptySlot && piece.name === \"Pawn\" ) {\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\telse if ( isTeamMate ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse if ( isEnemy ) {\n\t\t\t\t\tif ( hyptheticalMove.name === \"King\" ) {\n\t\t\t\t\t\tLoM.possibleChess = true; // used in the \"checkifAllowed\" method : if true the move is not allowed\n\t\t\t\t\t}\n\t\t\t\t\tif ( checkValidity ) { //avoids infinite CB // if TRUE (default) : the validity of the possibleMove will be checked// if set FALSE, the possible move validity will not be checked\n\t\t\t\t\t\tconst isAllowed = checkifAllowed( boardCopy, currentPlayer, piece.coord, { col: col + x, row: row + y } );\n\t\t\t\t\t\tisAllowed\n\t\t\t\t\t\t\t? LoM.possibleEat.push( { col: col + x, row: row + y } )\n\t\t\t\t\t\t\t: LoM.forbiddenMoves.push( { col: col + x, row: row + y } )\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\ti++;\n\t\t}\n\t\treturn LoM\n\t}, { possibleMoves: [], possibleEat: [], forbiddenMoves: [], possibleChess: false } )\n}\n\n// 1.2 Pawn is the only piece that does not eat from it's normal move, it uses another path that required its own method\nexport function getPawnEatingMoves ( board, color, firstMoveWeakness, piece, LoM, checkValidity = true ) {\n\tconst { col, row } = piece.coord;\n\tlet boardCopy = board.map( line => [ ...line ] );\n\n\tif ( piece.eatingMoves ) return piece.eatingMoves.reduce( ( LoM, { x, y } ) => {\n\t\tconst isWithinBoard = col + x <= 7 && col + x >= 0 && row + y >= 0 && row + y <= 7;\n\n\t\tif ( isWithinBoard ) {\n\t\t\tconst hyptheticalMove = board[ row + y ][ col + x ];\n\t\t\tconst isEnemy = hyptheticalMove.color && hyptheticalMove.color !== color;\n\t\t\tif ( isEnemy ) {\n\t\t\t\tif ( hyptheticalMove.name === \"King\" ) {\n\t\t\t\t\tLoM.possibleChess = true;\n\t\t\t\t}\n\t\t\t\tif ( checkValidity ) { //avoids infinite CB // if TRUE (default) : the validity of the possibleMove will be checked// if set FALSE, the possible move validity will not be checked\n\t\t\t\t\tconst isAllowed = checkifAllowed( boardCopy, color, piece.coord, { col: col + x, row: row + y } );\n\t\t\t\t\tisAllowed ? LoM.possibleEat.push( { col: col + x, row: row + y } ) : LoM.forbiddenMoves.push( { col: col + x, row: row + y } )\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( firstMoveWeakness ) {\n\t\t\t\tif ( firstMoveWeakness.col === col + x && firstMoveWeakness.row === row + y ) {\n\t\t\t\t\tLoM.possibleEat.push( { col: col + x, row: row + y } )\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn LoM;\n\t}, { possibleEat: [], forbiddenMoves: LoM.forbiddenMoves ? [ ...LoM.forbiddenMoves ] : [], possibleChess: false } )\n}\n\n// 1.3 check if the move is allowed, if it is not allowed the result will be then used to display a red cross on the Slot\nfunction checkifAllowed ( board, currentPlayer, currentPos, hypotheticPos ) {\n\t//creates a fake board for each possible move / eat of the selected piece and check if OWN king gets chessed\n\t//if chess => return false, the slot will become a forbidden move\n\tconst nextPlayer = currentPlayer === \"black\" ? \"white\" : \"black\";\n\tlet hypotheticBoard = movePiece( board, currentPos, hypotheticPos )\n\n\tfor ( let i = 0; i < hypotheticBoard.length; i++ ) {\n\t\tfor ( let j = 0; j < hypotheticBoard[ i ].length; j++ ) {\n\t\t\tconst piece = hypotheticBoard[ i ][ j ];\n\n\t\t\tif ( piece.color !== nextPlayer )\n\t\t\t\tcontinue;\n\t\t\tif ( getPossibleMoves( hypotheticBoard, nextPlayer, piece, false ).possibleChess )\n\t\t\t\treturn false\n\t\t\tif ( piece.name === \"Pawn\"\n\t\t\t\t&& getPawnEatingMoves( hypotheticBoard, nextPlayer, false, piece, false ).possibleChess )\n\t\t\t\treturn false\n\t\t}\n\t}\n\treturn true;\n}\n\n// 1.4 check if a rock can be done\nexport function getRock ( { board }, piece ) {\n\tfunction getClosest ( direction = 1 ) {\n\t\tconst { col, row } = piece.coord;\n\t\tfor ( let i = 1; col + i * direction <= 7 && col + i * direction >= 0; i++ ) {\n\t\t\tconst piece = board[ row ][ col + i * direction ];\n\t\t\tif ( piece.color ) {\n\t\t\t\treturn piece\n\t\t\t}\n\t\t}\n\t}\n\tconst canRockLeft = getClosest( -1 ) === undefined ? false : getClosest( -1 ).firstMove;\n\tconst canRockRight = getClosest( 1 ) === undefined ? false : getClosest( 1 ).firstMove;\n\tlet RockList = { possibleRock: [] }\n\n\tif ( !canRockLeft && !canRockRight )\n\t\treturn RockList;\n\tif ( piece.firstMove && ( canRockLeft || canRockRight ) ) {\n\t\tif ( canRockLeft )\n\t\t\tRockList.possibleRock.push( { col: 1, row: piece.coord.row } )\n\t\tif ( canRockRight )\n\t\t\tRockList.possibleRock.push( { col: 5, row: piece.coord.row } )\n\t}\n\treturn RockList;\n}\n\n// 1.5 check if next play has some possible moves. If so => return\nexport function verifyChessMate ( board, currentPlayer ) {\n\tconst nextPlayer = currentPlayer === \"black\" ? \"white\" : \"black\";\n\n\tfor ( let i = 0; i < board.length; i++ ) {\n\t\tfor ( let j = 0; j < board[ i ].length; j++ ) {\n\t\t\tconst piece = board[ i ][ j ];\n\n\t\t\tif ( piece.color === nextPlayer\n\t\t\t\t&& ( getPossibleMoves( board, nextPlayer, piece ).possibleMoves.length\n\t\t\t\t\t|| getPossibleMoves( board, nextPlayer, piece ).possibleEat.length ) ) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/****************************\n * 2. HELPERS TO HANDLE MOVE\n ****************************/\n\n// 2.1 handleRock\nexport function handleRock ( board, coord ) {\n\tif ( coord.col === 1 ) {\n\t\tboard[ coord.row ][ 2 ] = Object.assign( {}, new Rook( \"black\" ), { coord: { row: coord.row, col: 2 } } );\n\t\tboard[ coord.row ][ 0 ] = Object.assign( {}, new EmptySlot(), { coord: { row: coord.row, col: 0 } } )\n\t}\n\tif ( coord.col === 5 ) {\n\t\tboard[ coord.row ][ 4 ] = Object.assign( {}, board[ coord.row ][ 7 ], { coord: { row: coord.row, col: 4 } } )\n\t\tboard[ coord.row ][ 7 ] = Object.assign( {}, new EmptySlot(), { coord: { row: coord.row, col: 7 } } )\n\t}\n\treturn board;\n}\n\n// 2.2 movePiece\nexport function movePiece ( board, Start, End ) {\n\tconst playingPiece = board[ Start.row ][ Start.col ];\n\tboard[ End.row ][ End.col ] = Object.assign( {}, playingPiece, { coord: End } );\n\tboard[ Start.row ][ Start.col ] = Object.assign( new EmptySlot(), { coord: Start } );\n\n\treturn board;\n}\n\n// 2.3 changePawnToQueen\nexport function changePawnToQueen ( board, coord, currentPlayer ) {\n\tboard[ coord.row ][ coord.col ] = Object.assign( {}, new Queen( currentPlayer ), { coord } )\n\treturn board;\n}\n\n/***************************\n * 3. DISPLAY HELPERS\n ***************************/\n\n// 3.1 animatePiece\nexport function animatePiece ( startCoord, endCoord, target ) {\n\tconst root = document.documentElement;\n\n\ttarget.firstChild.classList.toggle( \"movingPiece\" )\n\troot.style.setProperty( \"--X\", `${ startCoord.x - endCoord.x }px` )\n\troot.style.setProperty( \"--Y\", `${ startCoord.y - endCoord.y }px` )\n\n\tsetTimeout( () => {\n\t\ttarget.firstChild.classList.toggle( \"movingPiece\" )\n\t\troot.style.setProperty( \"--X\", \"0\" )\n\t\troot.style.setProperty( \"--Y\", \"0\" )\n\t}, 500 )\n}\n\n// 3.2 getImage\nexport function getImage ( piece ) {\n\tconst pieceType = `${ piece.color }${ piece.name }`\n\n\treturn pieceType === \"blackKing\" ? blackKing\n\t\t: pieceType === \"blackKnight\" ? blackKnight\n\t\t\t: pieceType === \"blackPawn\" ? blackPawn\n\t\t\t\t: pieceType === \"blackQueen\" ? blackQueen\n\t\t\t\t\t: pieceType === \"blackRook\" ? blackRook\n\t\t\t\t\t\t: pieceType === \"blackBishop\" ? blackBishop\n\t\t\t\t\t\t\t: pieceType === \"whiteBishop\" ? whiteBishop\n\t\t\t\t\t\t\t\t: pieceType === \"whiteKing\" ? whiteKing\n\t\t\t\t\t\t\t\t\t: pieceType === \"whiteKnight\" ? whiteKnight\n\t\t\t\t\t\t\t\t\t\t: pieceType === \"whitePawn\" ? whitePawn\n\t\t\t\t\t\t\t\t\t\t\t: pieceType === \"whiteQueen\" ? whiteQueen\n\t\t\t\t\t\t\t\t\t\t\t\t: pieceType === \"whiteRook\" ? whiteRook\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\";\n}\n\n// 3.3 rotateBkg\nexport function rotateBkg ( currentPlayer ) {\n\tlet angle = currentPlayer === \"black\"\n\t\t? 0\n\t\t: 180;\n\tlet startingAngle = angle;\n\n\tfunction setAngle () {\n\t\tif ( startingAngle - angle < 100 )\n\t\t\tangle = angle - 4\n\t\telse if ( startingAngle - angle < 150 )\n\t\t\tangle = angle - 1\n\t\telse\n\t\t\tangle = angle - 0.5\n\t\tconsole.log( startingAngle - angle )\n\t\tdocument.documentElement.style.setProperty( \"--angle\", angle + \"deg\" )\n\t\tif ( angle !== 0 && angle !== -180 )\n\t\t\twindow.requestAnimationFrame( setAngle )\n\t}\n\tsetAngle()\n}\n\n\n\n","import React from \"react\";\nimport { getImage } from \"../helpers/helpers\"\n\nfunction Square ( { number, className, piece, handleClick } ) {\n\n\tconst SquareColor = ( number ) % 2 === 1 ? \"Black\" : \"White\";\n\n\treturn (\n\t\t<div\n\t\t\tonClick={ handleClick.bind( null, piece ) }\n\t\t\tclassName={ `${ SquareColor }Square ${ className }` }\n\t\t>\n\t\t\t<img src={ getImage( piece ) } alt=\"\" />\n\t\t</div >\n\t)\n}\n\nexport default React.memo( Square );","import { createStore } from \"redux\";\n\nconst initialState = {\n\twhite: [],\n\tblack: [],\n\tcurrentPlayer: \"black\",\n\tmove: 0,\n\tundo: false\n}\n\nfunction reducer ( state = initialState, action ) {\n\tswitch ( action.type ) {\n\t\tcase \"ADD_WHITE\":\n\t\t\treturn { ...state, white: [ ...state.white, action.payload ] }\n\t\tcase \"ADD_BLACK\":\n\t\t\treturn { ...state, black: [ ...state.black, action.payload ] }\n\t\tcase \"SWITCH_PLAYER\":\n\t\t\treturn { ...state, currentPlayer: action.payload }\n\t\tcase \"ADD_MOVE\":\n\t\t\treturn { ...state, move: state.move + 1 }\n\t\tcase \"SUB_MOVE\":\n\t\t\treturn { ...state, move: state.move - 1 }\n\t\tcase \"TOGGLE_UNDO\":\n\t\t\treturn { ...state, undo: !state.undo }\n\t\tcase \"RELOAD_LOST_PIECES\": {\n\t\t\tconsole.log( {\n\t\t\t\t...state,\n\t\t\t\twhite: action.payload.white,\n\t\t\t\tblack: action.payload.black\n\t\t\t} )\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\twhite: action.payload.white,\n\t\t\t\tblack: action.payload.black\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport let store = createStore( reducer );\n","import React from \"react\";\nimport Square from \"./Square\";\nimport { Knight, EmptySlot, Rook, Bishop, Queen, King, Pawn } from \"../pieces/Pieces.js\";\nimport { rotateBkg, verifyChessMate, getPossibleMoves, getRock, getPawnEatingMoves, movePiece, changePawnToQueen, handleRock, animatePiece } from \"../helpers/helpers\"\nimport { connect } from \"react-redux\";\nimport { store } from \"../reduxStore/Store\";\nimport _ from 'lodash';\n\nconst initialBoard = [\n\t[ new Rook( \"white\" ), new Knight( \"white\" ), new Bishop( \"white\" ), new King( \"white\" ), new Queen( \"white\" ), new Bishop( \"white\" ), new Knight( \"white\" ), new Rook( \"white\" ) ],\n\t[ new Pawn( \"white\" ), new EmptySlot( \"white\" ), new Pawn( \"white\" ), new EmptySlot( \"white\" ), new EmptySlot( \"white\" ), new Pawn( \"white\" ), new EmptySlot( \"white\" ), new Pawn( \"white\" ) ],\n\t[ new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new Queen( \"white\" ), new EmptySlot(), new EmptySlot() ],\n\t[ new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot() ],\n\t[ new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot() ],\n\t[ new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot(), new EmptySlot() ],\n\t[ new Pawn( \"black\" ), new Pawn( \"black\" ), new EmptySlot( \"black\" ), new Pawn( \"black\" ), new EmptySlot( \"black\" ), new Pawn( \"white\" ), new EmptySlot( \"black\" ), new Pawn( \"black\" ) ],\n\t[ new Rook( \"black\" ), new EmptySlot( \"black\" ), new EmptySlot( \"black\" ), new King( \"black\" ), new EmptySlot( \"black\" ), new EmptySlot( \"black\" ), new EmptySlot( \"black\" ), new Rook( \"black\" ) ],\n].map( ( line, row ) => line.map( ( piece, col ) => {\n\tpiece.coord = { col, row }\n\treturn piece;\n} ) )\n\nclass Board extends React.Component {\n\n\tstate = {\n\t\tboard: initialBoard,\n\t\tcurrentPlayer: \"black\",\n\t\tselectedCoord: {},\n\t\tStartingCoord: {},\n\t\tLoM: { possibleMoves: [], possibleEat: [], possibleRock: [], possibleChess: false },\n\t\tlostPieces: {\n\t\t\twhite: [],\n\t\t\tblack: []\n\t\t},\n\t\tchessMate: false,\n\t\tprevState: {}\n\t}\n\n\tcomponentDidUpdate = () => {\n\t\t// handle UNDO\n\t\tif ( this.props.undo ) {\n\t\t\tconsole.log( this.state.prevState.lostPieces )\n\t\t\tthis.setState( this.state.prevState );\n\t\t\tstore.dispatch( { type: \"TOGGLE_UNDO\" } )\n\t\t\tstore.dispatch( { type: \"RELOAD_LOST_PIECES\", payload: this.state.prevState.lostPieces } )\n\t\t\tstore.dispatch( { type: \"SUB_MOVE\" } )\n\t\t}\n\t}\n\n\thandleClick = ( piece, e ) => {\n\t\tconst stateCopy = _.cloneDeep( this.state )\n\t\tlet { board, currentPlayer, selectedCoord, lostPieces } = stateCopy;\n\t\tconst hasSelectedPieceToMove = piece.color === currentPlayer && ( piece.coord.col !== selectedCoord.col || piece.coord.row !== selectedCoord.row )\n\t\tconst validMove = ( piece.coord.col !== selectedCoord.col || piece.coord.row !== selectedCoord.row ) && ( piece.color === currentPlayer || e.target.classList.contains( \"possibleMove\" ) || e.target.classList.contains( \"possibleEat\" ) || e.target.classList.contains( \"possibleRock\" ) );\n\n\t\t/******************\n\t\t *  SELECTING PIECE TO MOVE\n\t\t */\n\t\tif ( hasSelectedPieceToMove ) {\n\t\t\tconst StartingCoord = { y: e.target.getBoundingClientRect().top, x: e.target.getBoundingClientRect().left };\n\t\t\tthis.setState( {\n\t\t\t\tStartingCoord: StartingCoord\n\t\t\t} )\n\n\t\t\tlet LoM = getPossibleMoves( board, stateCopy.currentPlayer, piece )\n\n\t\t\tif ( piece.name === \"King\" && piece.firstMove ) {\n\t\t\t\tLoM = { ...LoM, ...getRock( _.cloneDeep( stateCopy ), piece ) }\n\t\t\t}\n\n\t\t\tif ( piece.name === \"Pawn\" ) {\n\t\t\t\tLoM = { ...LoM, ...getPawnEatingMoves( board, currentPlayer, stateCopy.firstMoveWeakness, piece, LoM ) }\n\t\t\t}\n\n\t\t\tthis.setState( {\n\t\t\t\tLoM,\n\t\t\t\tselectedCoord: piece.coord\n\t\t\t} )\n\t\t\treturn\n\t\t}\n\n\t\t/******************\n\t\t * INVALID MOVE\n\t\t */\n\t\telse if ( !validMove ) {\n\t\t\tthis.setState( {\n\t\t\t\tselectedCoord: {},\n\t\t\t\tLoM: { possibleMoves: [], possibleEat: [], possibleRock: [] },\n\t\t\t\tStartingCoord: {},\n\t\t\t} )\n\t\t}\n\n\t\t/******************\n\t\t * VALID MOVE\n\t\t */\n\t\telse if ( validMove ) {\n\t\t\tconst EndingCoord = { y: e.target.getBoundingClientRect().top, x: e.target.getBoundingClientRect().left };\n\t\t\tconst nextPlayer = currentPlayer === \"black\" ? \"white\" : \"black\";\n\t\t\tconst playedPiece = board[ selectedCoord.row ][ selectedCoord.col ]\n\t\t\tconst { col, row } = piece.coord;\n\t\t\tconst ateFromBehind = stateCopy.firstMoveWeakness && playedPiece.name === \"Pawn\" && col === stateCopy.firstMoveWeakness.col && row === stateCopy.firstMoveWeakness.row;\n\t\t\tconst ateSomething = board[ piece.coord.row ][ piece.coord.col ].name;\n\t\t\tconst direction = playedPiece.direction;\n\t\t\tconst pawnDoubleMove = playedPiece.name === \"Pawn\" && ( row === 3 || row === 4 );\n\t\t\tconst didRock = e.target.classList.contains( \"possibleRock\" );\n\t\t\tlet firstMoveWeakness = null;\n\n\t\t\t// save previous state in case of future UNDO\n\t\t\tthis.setState( {\n\t\t\t\tprevState: {\n\t\t\t\t\tcurrentPlayer,\n\t\t\t\t\tboard: _.cloneDeep( stateCopy.board ),\n\t\t\t\t\tselectedCoord: {},\n\t\t\t\t\tStartingCoord: {},\n\t\t\t\t\tLoM: { possibleMoves: [], possibleEat: [], possibleRock: [], possibleChess: false },\n\t\t\t\t\tlostPieces: {\n\t\t\t\t\t\twhite: stateCopy.lostPieces.white.slice(),\n\t\t\t\t\t\tblack: stateCopy.lostPieces.black.slice()\n\t\t\t\t\t},\n\t\t\t\t\tchessMate: false,\n\t\t\t\t\tprevState: this.state.prevState\n\t\t\t\t}\n\t\t\t} )\n\n\t\t\t//trigger animation\n\t\t\tanimatePiece( stateCopy.StartingCoord, EndingCoord, e.target );\n\n\t\t\t// update lost pieces\n\t\t\tif ( ateSomething ) {\n\t\t\t\tif ( currentPlayer === \"black\" ) {\n\t\t\t\t\tstore.dispatch( {\n\t\t\t\t\t\ttype: \"ADD_WHITE\",\n\t\t\t\t\t\tpayload: { ...board[ row ][ col ] }\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\telse if ( currentPlayer === \"white\" ) {\n\t\t\t\t\tstore.dispatch( {\n\t\t\t\t\t\ttype: \"ADD_BLACK\",\n\t\t\t\t\t\tpayload: { ...board[ row ][ col ] }\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tlostPieces[ nextPlayer ] = [ ...lostPieces[ nextPlayer ], { ...board[ row ][ col ] } ]\n\t\t\t}\n\n\t\t\t//update the board copy with the move\n\t\t\tboard = movePiece( board, selectedCoord, piece.coord );\n\n\t\t\t//handle Rock if Rocked\n\t\t\tif ( didRock ) {\n\t\t\t\tboard = handleRock( board, piece.coord )\n\t\t\t}\n\n\t\t\t// handle eat after Pion makes double move as first move\n\t\t\telse if ( ateFromBehind ) {\n\t\t\t\tlostPieces[ nextPlayer ] = [ ...lostPieces[ nextPlayer ], { ...board[ row - direction ][ col ] } ]\n\t\t\t\tboard[ row - direction ][ col ] = Object.assign( {}, new EmptySlot(), { coord: { row: row - direction, col } } )\n\t\t\t}\n\n\t\t\t//handle first move : 1. pass firstMove to false, 2. set firstMoveWeakness if Pion made a double move\n\t\t\tif ( playedPiece.firstMove ) {\n\t\t\t\tboard[ piece.coord.row ][ piece.coord.col ].handleFirstMove()\n\n\t\t\t\tif ( pawnDoubleMove ) {\n\t\t\t\t\tboard[ row - direction ][ col ] = Object.assign( board[ row - direction ][ col ], { firstMoveWeakness: true } )\n\t\t\t\t\tfirstMoveWeakness = { col, row: row - direction }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//Transform Pion to Queen if needed\n\t\t\tif ( board[ piece.coord.row ][ piece.coord.col ].name === \"Pawn\" && ( piece.coord.row === 0 || piece.coord.row === 7 ) )\n\t\t\t\tboard = changePawnToQueen( board, piece.coord, currentPlayer ) //pawn becomes queen on last row\n\n\t\t\t//Change current Player in global Store\n\t\t\tstore.dispatch( {\n\t\t\t\ttype: \"SWITCH_PLAYER\",\n\t\t\t\tpayload: nextPlayer\n\t\t\t} )\n\n\t\t\t//increase move counter by 1 in global state\n\t\t\tstore.dispatch( {\n\t\t\t\ttype: \"ADD_MOVE\",\n\t\t\t} )\n\n\t\t\t//rotate board bkg\n\t\t\trotateBkg( currentPlayer )\n\n\t\t\t//update the state\n\t\t\tthis.setState( {\n\t\t\t\tboard: board,\n\t\t\t\tselectedCoord: {},\n\t\t\t\tLoM: { possibleMoves: [], possibleEat: [], possibleRock: [] },\n\t\t\t\tcurrentPlayer: nextPlayer,\n\t\t\t\tfirstMoveWeakness,\n\t\t\t\tStartingCoord: {},\n\t\t\t\tchessMate: verifyChessMate( board, currentPlayer )\n\t\t\t} )\n\t\t}\n\t}\n\n\t// get Class Name during rendering process\n\tgetClassName = ( state, col, row ) => {\n\t\tlet boardCopy = state.board.map( line => [ ...line ] );\n\t\tconst { selectedCoord, LoM, currentPlayer } = { ...state };\n\t\tlet className = \" \";\n\n\t\tif ( boardCopy[ row ][ col ].color ) {\n\t\t\tclassName += ( boardCopy[ row ][ col ].color + \"Piece \" )\n\t\t}\n\t\tif ( boardCopy[ row ][ col ].color === currentPlayer ) {\n\t\t\tclassName += \"playing \"\n\t\t}\n\t\tif ( selectedCoord.col === col && selectedCoord.row === row ) {\n\t\t\treturn className += \"isSelected \";\n\t\t}\n\t\tif ( \"forbiddenMoves\" in LoM ) {\n\t\t\tfor ( let i = 0; i < LoM.forbiddenMoves.length; i++ ) {\n\t\t\t\tif ( LoM.forbiddenMoves[ i ].col === col && LoM.forbiddenMoves[ i ].row === row ) {\n\t\t\t\t\treturn className += \"forbiddenMove \";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( \"possibleMoves\" in LoM ) {\n\t\t\tfor ( let i = 0; i < LoM.possibleMoves.length; i++ ) {\n\t\t\t\tif ( LoM.possibleMoves[ i ].col === col && LoM.possibleMoves[ i ].row === row ) {\n\t\t\t\t\treturn className += \"possibleMove \";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( \"possibleEat\" in LoM ) {\n\t\t\tfor ( let i = 0; i < LoM.possibleEat.length; i++ ) {\n\t\t\t\tif ( LoM.possibleEat[ i ].col === col && LoM.possibleEat[ i ].row === row ) {\n\t\t\t\t\treturn className += \"possibleEat \";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif ( \"possibleRock\" in LoM ) {\n\t\t\tfor ( let i = 0; i < LoM.possibleRock.length; i++ ) {\n\t\t\t\tif ( LoM.possibleRock[ i ].col === col && LoM.possibleRock[ i ].row === row ) {\n\t\t\t\t\treturn className += \"possibleRock \";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn className;\n\t}\n\n\trender () {\n\n\t\tconst nextPlayer = this.state.currentPlayer === \"black\" ? \"white\" : \"black\";\n\t\treturn (\n\t\t\t<div className=\"board-bkg\">\n\t\t\t\t<div className={ \"Board \" + this.state.selectedCoord } >\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.board.map( ( line, row ) => line.map( ( piece, col ) => {\n\t\t\t\t\t\t\tconst className = this.getClassName( this.state, col, row )\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Square\n\t\t\t\t\t\t\t\t\tkey={ row * row + col * col }\n\t\t\t\t\t\t\t\t\tnumber={ col + row }\n\t\t\t\t\t\t\t\t\tpiece={ piece }\n\t\t\t\t\t\t\t\t\thandleClick={ this.handleClick }\n\t\t\t\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t} ) )\n\t\t\t\t\t}\n\t\t\t\t\t{ this.state.chessMate && (\n\t\t\t\t\t\t<div className=\"chessMate\">{ nextPlayer + \" wins\" }</div>\n\t\t\t\t\t) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = ( state, ownProps ) => ( { ...state, ...ownProps } )\n\nexport default connect( mapStateToProps )( Board );\n","import React from \"react\";\n\nfunction FullScreenBtn () {\n\n\tconst [ fullScreen, setScreenState ] = React.useState( false )\n\n\tconst root = document.getElementById( \"root\" )\n\n\tconst toggleFullscreen = () => {\n\t\tif ( !document.webkitIsFullScreen ) {\n\t\t\tif ( root.requestFullscreen ) {\n\t\t\t\troot.requestFullscreen();\n\t\t\t} else if ( root.mozRequestFullScreen ) {\n\t\t\t\troot.mozRequestFullScreen();\n\t\t\t} else if ( root.webkitRequestFullscreen ) {\n\t\t\t\troot.webkitRequestFullscreen();\n\t\t\t} else if ( root.msRequestFullscreen ) {\n\t\t\t\troot.msRequestFullscreen();\n\t\t\t}\n\t\t\tsetScreenState( true )\n\t\t}\n\t\telse {\n\t\t\tif ( document.exitFullscreen ) {\n\t\t\t\tdocument.exitFullscreen();\n\t\t\t} else if ( document.mozCancelFullScreen ) {\n\t\t\t\tdocument.mozCancelFullScreen();\n\t\t\t} else if ( document.webkitExitFullscreen ) {\n\t\t\t\tdocument.webkitExitFullscreen();\n\t\t\t} else if ( document.msExitFullscreen ) {\n\t\t\t\tdocument.msExitFullscreen();\n\t\t\t}\n\t\t\tsetScreenState( false )\n\t\t}\n\t}\n\tconst icon = fullScreen\n\t\t? <i className=\"fas fa-compress-arrows-alt\" onClick={ toggleFullscreen }></i>\n\t\t: <i className=\"fas fa-expand-arrows-alt\" onClick={ toggleFullscreen }></i>\n\n\treturn (\n\t\t<>\n\t\t\t{ icon }\n\t\t</>\n\t)\n\n}\n\nexport default FullScreenBtn;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { store } from \"../reduxStore/Store\";\n\nfunction StatusPanel ( { currentPlayer, move } ) {\n\n\tconst handleUndo = () => {\n\t\tif ( move )\n\t\t\tstore.dispatch( {\n\t\t\t\ttype: \"TOGGLE_UNDO\"\n\t\t\t} )\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div>{ currentPlayer + \" plays \\nMove : \" + move }</div>\n\t\t\t<button className=\"undo\" onClick={ handleUndo }>UNDO</button>\n\t\t</>\n\t)\n}\n\nconst mapPropsToState = ( state, ownProps ) => ( {\n\t...ownProps,\n\tcurrentPlayer: state.currentPlayer,\n\tmove: state.move\n} )\n\nexport default connect( mapPropsToState )( StatusPanel );","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getImage } from \"../helpers/helpers\"\n\n\nfunction LostPieces ( props ) {\n\tconst color = Object.keys( props )[ 0 ]\n\n\treturn (\n\t\t<div className=\"lostPieces\">\n\t\t\t{ props[ color ].map( ( piece, index ) => {\n\t\t\t\treturn <img src={ getImage( piece ) } alt=\"\" key={ index + piece } />\n\t\t\t} ) }\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps_WhiteLostPieces = ( { white }, ownProps ) => ( { white: [ ...white ], ...ownProps } );\nexport const WhiteLostPieces = connect( mapStateToProps_WhiteLostPieces )( LostPieces )\n\nconst mapStateToProps_BlackLostPieces = ( { black }, ownProps ) => ( { black: [ ...black ], ...ownProps } );\nexport const BlackLostPieces = connect( mapStateToProps_BlackLostPieces )( LostPieces ) \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport Board from \"./components/Board\"\nimport FullScreenBtn from \"./components/FullScreenBtn\"\nimport StatusPanel from \"./components/StatusPanel\"\nimport { WhiteLostPieces, BlackLostPieces } from \"./components/LostPieces\"\nimport { Provider } from 'react-redux';\nimport { store } from \"./reduxStore/Store\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<div className=\"App\">\n\t\t<FullScreenBtn />\n\t\t<Provider store={ store }>\n\t\t\t<BlackLostPieces />\n\t\t\t<Board />\n\t\t\t<WhiteLostPieces />\n\t\t\t<StatusPanel />\n\t\t</Provider>\n\t</div>,\n\n\tdocument.getElementById( 'root' )\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}